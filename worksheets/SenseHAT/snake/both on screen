from sense_hat import SenseHat
from time import sleep
sense = SenseHat()
import random
r = 100

g = 100

b = 100
RED = (100,0,0)
b=(0,0,0)

matrix = [[b for column in range(8)] for row in range(8)]
def flatten(matrix):
    flattened =[pixel for row in matrix for pixel in row]
    return flattened
#flattens the matrix


white = (100,100,100)

off = (0,0,0)

snake_y = 4
snake_x = 0


def draw_snake():
    sense.set_pixel(snake_x,snake_y,white)
    
def move_up(event):
    global snake_y
    if snake_y == 0 and event.action == "pressed":
        snake_y=7
    elif event.action == 'pressed':
        snake_y -= 1
        
def move_down(event):
    global snake_y
    if snake_y == 7 and event.action == "pressed":
        snake_y=0
    elif event.action == 'pressed':
        snake_y += 1
        
        
def move_right(event):
    global _x
    if snake_x == 7 and event.action =="pressed":
        snake_x=0
    elif event.action == 'pressed':
        snake_x += 1
        
def move_left(event):
    global snake_x
    if snake_x==0 and event.action == "pressed":
        snake_x=7
    elif event.action == 'pressed':
        snake_x -= 1

def apple(matrix):
    num_x = random.randint(0,7)
    num_y = random.randint(0,7)
    matrix[num_x][num_y] = RED
    return matrix

def snake_on_screen(matrix):
    matrix[snake_x][snake_y] = white
    return matrix
    


while True:

    sense.stick.direction_down = move_down
    sleep(0.25)
    sense.clear(0,0,0)
    
    sense.stick.direction_up = move_up
    sleep(0.25)
    sense.clear(0,0,0)
    
    sense.stick.direction_right = move_right
    sleep(0.25)
    sense.clear(0,0,0)
    
    sense.stick.direction_left = move_left
    sleep(0.25)
    sense.clear(0,0,0)
    
    matrix = snake_on_screen(matrix)
    matrix = apple(matrix)
    sense.set_pixels(flatten(matrix))
    sleep(1)
#the game running
        